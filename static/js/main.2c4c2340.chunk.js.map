{"version":3,"sources":["components/Form.js","components/Item.js","components/List.js","components/App.js","index.js"],"names":["FormStyle","styled","form","Form","props","console","log","addTodoItem","type","class","className","onClick","input","document","getElementsByTagName","value","length","Item","React","useState","isDone","setIsDone","buttonText","todoItem","Button","variant","color","deleteTodoItem","List","todoItems","map","key","id","AppWrapper","div","GlobalStyle","createGlobalStyle","reset","App","content","setTodoItems","newContent","newTodoItem","newTodoItems","concat","filter","ReactDOM","render","getElementById"],"mappings":"krBAIA,IAAMA,EAAYC,UAAOC,KAAV,KAsDAC,EA1BF,SAACC,GACVC,QAAQC,IAAIF,EAAMG,aAiBlB,OACI,kBAACP,EAAD,KACI,2BAAOQ,KAAK,OAAOC,MAAM,UACzB,4BAAQC,UAAU,MAAMC,QAlBZ,WAChB,IAAMC,EAAOC,SAASC,qBAAqB,SAAS,GAIzB,IAAvBF,EAAMG,MAAMC,SAIhBZ,EAAMG,YAAYK,EAAMG,OAExBH,EAAMG,MAAQ,MAOV,kB,yBCxBGE,EAxBF,SAACb,GAAW,IAAD,EACQc,IAAMC,UAAS,GADvB,mBACbC,EADa,KACLC,EADK,KAIdC,EAAaF,EAAS,qBAAQ,eAUpC,OACI,4BACI,2BAAIhB,EAAMmB,SAAN,SACJ,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYd,QALf,kBAAMU,GAAWD,IAKsBM,MAAON,EAAS,YAAc,WAAYE,GAC9F,kBAAC,IAAD,CAAYX,QAAS,kBAAMP,EAAMuB,eAAevB,EAAMmB,SAAN,SCN7CK,EAdF,SAACxB,GAGV,OAFAC,QAAQC,IAAIF,EAAMyB,WAGd,4BACKzB,EAAMyB,UAAUC,KAAI,SAAAP,GAAQ,OAC7B,kBAAC,EAAD,CACAA,SAAUA,EACVI,eAAgBvB,EAAMuB,eACtBI,IAAMR,EAASS,U,mbCH3B,IAAMC,EAAahC,UAAOiC,IAAV,KAaVC,EAAcC,4BAAH,IACfC,KA+CaC,EA7CH,WAAO,IAAD,EACoBpB,IAAMC,SAAU,CAC9C,CACIa,GAAI,EACJO,QAAS,uBAEb,CACIP,GAAI,EACJO,QAAS,uBAEb,CACIP,GAAI,EACJO,QAAS,yBAZH,mBACPV,EADO,KACIW,EADJ,KAiCd,OACI,oCACI,kBAACL,EAAD,MACA,kBAACF,EAAD,KACA,4CACA,kBAAC,EAAD,CAAM1B,YArBM,SAACkC,GAEjB,IAAMC,EAAc,CAChBV,GAAIH,EAAUb,OAAS,EACvBuB,QAASE,GAEPE,EAAed,EAAUe,OAAOF,GACtCF,EAAaG,MAeT,kBAAC,EAAD,CAAMd,UAAWA,EAAWF,eAZd,SAACK,GACnB,IAAMW,EAAed,EAAUgB,QAAO,SAAAtB,GAAQ,OAAIS,IAAOT,EAASS,MAClEQ,EAAaG,SClDrBG,IAASC,OACL,kBAAC,EAAD,MACAlC,SAASmC,eAAe,W","file":"static/js/main.2c4c2340.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\n\nconst FormStyle = styled.form`\nbackground-color: gray;\nheight: 24px;\n.btn {\n  position: relative;\n  display: inline-block;\n  font-weight: bold;\n  padding:  4px 0;\n  margin-left: 3px;\n  text-decoration: none;\n  color: #00BCD4;\n  background: #fff;\n  border-radius: 0 15px 15px 0;\n  transition: .4s;\n}\n\n.btn:active {\n  background: gray;\n}\n\n.input {\n    position: relative;\n    padding: 5px 0 2px 0;\n    border: 0;\n}\n`\n\n\nconst Form = (props) => {\n    console.log(props.addTodoItem)\n\n    const handleClick = () => {\n        const input =document.getElementsByTagName('input')[0]\n        // console.log(input.value)\n\n        // 0文字での入力はリターンを使って処理を終了させる\n        if (input.value.length === 0) {\n            return;\n        }\n\n        props.addTodoItem(input.value)\n\n        input.value = \"\"\n\n\n    }\n    return (\n        <FormStyle>\n            <input type=\"text\" class=\"input\"/>\n            <button className=\"btn\" onClick={handleClick}>追加</button>\n        </FormStyle>\n    )\n}\n\nexport default Form","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst Item = (props) => {\n    const [isDone, setIsDone] = React.useState(false)\n\n    // 三項演算子　または条件演算子\n    const buttonText = isDone ? '未完了' : '完了'\n\n    // if (isDone) {\n    //     buttonText ='未完了'\n    // }　else {\n    //     buttonText ='完了'\n    // }\n\n    const toggleIsDone = () => setIsDone(!isDone)\n\n    return (\n        <li>\n            <p>{props.todoItem[\"content\"]}</p>\n            <Button variant=\"contained\" onClick ={toggleIsDone} color={isDone ? \"secondary\" : \"default\"}>{buttonText}</Button>\n            <DeleteIcon onClick={() => props.deleteTodoItem(props.todoItem['id'])}/>\n            {/* <Button variant=\"contained\" color=\"secondary\"　onClick={() => props.deleteTodoItem(props.todoItem['id'])}>削除</Button> */}\n        </li>\n    )\n}\n\nexport default Item","import React from 'react'\nimport Item from './Item'\n\nconst List = (props) => {\n    console.log(props.todoItems);\n    \n    return (\n        <ul>\n            {props.todoItems.map(todoItem => \n            <Item \n            todoItem={todoItem} \n            deleteTodoItem={props.deleteTodoItem}\n            key ={todoItem.id}/>)}\n        </ul>\n    )\n}\n\nexport default List","import React from 'react'\nimport styled, {createGlobalStyle} from 'styled-components'\nimport reset from 'styled-reset'\n\n\nimport Form from './Form'\nimport List from './List'\n// import '../stylesheets/App.css'\n\nconst AppWrapper = styled.div`\n@import url('https://fonts.googleapis.com/css?family=Sacramento');\ntext-align: center;\nbackground: linear-gradient(#fff, #000);\nheight: 100vh;\nh1 {\n    font-family: 'Sacramento', cursive;\n    padding: 30px;\n    font-size: 40px;\n    background: linear-gradient(#000000, #fff);\n}\n`\n\nconst GlobalStyle = createGlobalStyle`\n${reset}\n`\nconst App = () => {\n    const [todoItems, setTodoItems] = React.useState( [\n        {\n            id: 1,\n            content: 'テスト1'\n        },\n        {\n            id: 2,\n            content: 'テスト2'\n        },\n        {\n            id: 3,\n            content: 'テスト3'\n        }\n    ] \n    )\n\n    const addTodoItem = (newContent) => {\n        // console.log(newTodoItem)\n        const newTodoItem = {\n            id: todoItems.length + 1,\n            content: newContent\n        }\n        const newTodoItems = todoItems.concat(newTodoItem)\n        setTodoItems(newTodoItems)\n    }\n\n    const deleteTodoItem =(id) => {\n        const newTodoItems = todoItems.filter(todoItem => id !== todoItem.id)\n        setTodoItems(newTodoItems);\n    }\n\n\n    return (\n        <>\n            <GlobalStyle />\n            <AppWrapper>\n            <h1>My ToDo List</h1>\n            <Form addTodoItem={addTodoItem}/>\n            <List todoItems={todoItems} deleteTodoItem={deleteTodoItem}/>\n            </AppWrapper>\n            </>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'))\n"],"sourceRoot":""}